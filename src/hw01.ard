-- 1. Установите arend, следуя инструкциям на странице https://arend-lang.github.io/download
--    В IDEA можно просто импортировать данный проект.

-- 2. Определите аналоги следующих функций на языке хаскелл.
{- Haskell:
   second :: Nat -> Nat -> Nat -> Nat
   second _ y _ = y

   apply :: (Nat -> Nat) -> Nat -> Nat
   apply f x = f x

   compose :: (Nat -> Nat) -> (Nat -> Nat) -> Nat -> Nat
   compose f g x = f (g x)

   flip :: (Nat -> Nat -> Nat) -> Nat -> Nat -> Nat
   flip f x y = f y x

   second' = flip (second 0)
-}

\func second (_ y _ : Nat) => y

\func apply (f : Nat -> Nat) (x : Nat) => f x

\func compose (f : Nat -> Nat) (g : Nat -> Nat) : Nat -> Nat => \lam (x : Nat) => f (g x)

\func flip (f : Nat -> Nat -> Nat) (x : Nat) (y : Nat) => f y x

\func second' => flip (second 0)

-- 3. Расставьте приоритеты функций f1, f2, f3, f4, f5 и f6 так, чтобы функция test проходила тайпчекинг.

\import lect01 \hiding (+,*)

\func \infix 2 f1 (x y : Nat) => x
\func f2 : Nat => 0
\func \infix 1 f3 (f : Nat -> Nat) (z : Nat) : Int => 0
\func f4 : Nat => 0
\func \infix 2 f5 => f1
\func f6 => f4

\func test => f1 f2 f3 f4 f5 f6

-- 4. Определите функцию if, аналогичную следующей функции:
{- Haskell:
   if :: Bool -> Bool -> Bool -> Bool
   if True t _ = t
   if False _ e = e
-}

\func if (b t f : Bool) : Bool \elim b
  | true => t
  | false => f

-- 5. Определите || через if.

\func \infixr 2 || (x y : Bool) : Bool => if x true y

-- 6. Определите возведение в степень и факториал для натуральных чисел.

\open Nat \hiding (-,div) -- Здесь лежат + и *.

\func \infixr 8 ^ (x y : Nat) : Nat \elim y
  | suc y' => x * (x ^ y')
  | zero => 1

\func fac (x : Nat) : Nat
  | suc x => suc x * fac x
  | zero => 1

-- 7. Определите mod и gcd.

\func eq (x y : Nat) : Bool \elim x, y
  | suc x, suc y => eq x y
  | zero, zero => true
  | _, _ => false

\func ge (x y : Nat) : Bool \elim x, y
  | suc x, suc y => ge x y
  | suc x, zero => true
  | zero, zero => true
  | _, _ => false

\func gt (x y : Nat) : Bool \elim x, y
  | suc x, suc y => gt x y
  | suc x, zero => true
  | _, _ => false
