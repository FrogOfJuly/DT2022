\import Function
\import Function.Meta
\import Utils
\import hw03 (repl)
\import lect05

-- 2. Докажите, что (\lam x => not (not x)) = (\lam x => x).

\func notNotId : (\lam x => not (not x)) = (\lam x => x) => funExt' aux
  \where {
    \func aux (x : Bool) : not (not x) = x
      | true => idp
      | false => idp
  }

-- 3. Докажите, что fac не равен suc.

\open Nat(*)

\func fac (n : Nat) : Nat
  | 0 => 1
  | suc n => suc n * fac n

\func fac/=suc (p : fac = suc) : Empty =>
  \let
    | unit=empty => pmap (\lam f => aux (f 2)) {fac} {suc} p
  \in repl unit=empty ()
  \where {
    \func aux (x : Nat) : \Type \elim x
      | 2 => \Sigma
      | _ => Empty
  }

-- 4. Докажите, что left = right, не используя transport, coe и паттерн матчинг с idp.

\func left=right : left = right => path id

-- 5. Докажите, что если a = a' и b = b', то (a,b) = (a',b'), не используя transport, coe и паттерн матчинг с idp.

\func pairEq {A B : \Type} {a a' : A} {b b' : B} (p : a = a') (q : b = b') : (a,b) = (a',b') =>
  path (\lam i => (p i, q i))

-- 6. Докажите, что если p = p', то p.1 = p'.1, не используя transport, coe и паттерн матчинг с idp.

\func projEq {A : \Type} (B : A -> \Type) {p p' : \Sigma (x : A) (B x)} (t : p = p') : p.1 = p'.1 =>
  path $ (\lam i => (t i).1 )

-- 7. Докажите pmap2, не используя transport, coe и паттерн матчинг с idp.

\func pmap2' {A B C : \Type} (f : A -> B -> C) {a a' : A} (p : a = a') {b b' : B} (q : b = b') : f a b = f a' b' =>
  path (\lam i => f (p i) (q i))

-- 8. Мы видели как определить transport через coe. Определите частный случай coe через transport.

\func coe0 (A : I -> \Type) (a : A left) : A right => transport A left=right a

-- 9. Определите функцию B right -> B left.

\func Itr' {B : I -> \Type} (b : B right) : B left => transport B (sym left=right) b
